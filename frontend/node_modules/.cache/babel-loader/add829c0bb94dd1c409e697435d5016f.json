{"ast":null,"code":"import _objectSpread from \"/home/jcho/Go/src/github.com/jchou8/sling/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/jcho/Go/src/github.com/jchou8/sling/src/components/Login.tsx\";\nimport React, { Component } from 'react';\nimport { Container, TextField, Button } from '@material-ui/core';\nconst initialState = {\n  login: true,\n  username: '',\n  password: '',\n  email: '',\n  error: '',\n  loading: false\n};\nexport default class Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = initialState;\n  }\n\n  handleChange(value, field) {\n    this.setState(prevState => _objectSpread({}, prevState, {\n      [field]: value\n    }));\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    if (!this.validateInfo()) {\n      return;\n    }\n\n    this.setState({\n      error: '',\n      loading: true\n    });\n\n    if (this.state.login) {\n      this.tryLogin();\n    } else {\n      this.tryRegister();\n    }\n  }\n\n  validateInfo() {\n    if (this.state.username.length <= 0) {\n      this.setState({\n        error: 'No username provided.'\n      });\n      return false;\n    }\n\n    if (!this.state.login && this.state.email.length <= 0) {\n      this.setState({\n        error: 'No email provided.'\n      });\n      return false;\n    }\n\n    if (this.state.password.length <= 0) {\n      this.setState({\n        error: 'No password provided.'\n      });\n      return false;\n    }\n\n    return true;\n  }\n\n  toggleLogin() {\n    this.setState({\n      login: !this.state.login\n    });\n  }\n\n  tryLogin() {\n    this.setState({\n      loading: false\n    });\n  }\n\n  tryRegister() {\n    this.setState({\n      loading: false\n    });\n  }\n\n  render() {\n    return React.createElement(Container, {\n      maxWidth: \"sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, this.state.login ? 'Login' : 'Register'), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(Button, {\n      disabled: this.state.loading,\n      variant: \"contained\",\n      onClick: () => this.toggleLogin(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, this.state.login ? 'Register' : 'Login')), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      onSubmit: e => this.handleSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      disabled: this.state.loading,\n      id: \"username\",\n      label: \"Username\",\n      value: this.state.username,\n      onChange: e => this.handleChange(e.currentTarget.value, 'username'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    })), !this.state.login && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      disabled: this.state.loading,\n      id: \"email\",\n      label: \"Email\",\n      value: this.state.email,\n      onChange: e => this.handleChange(e.currentTarget.value, 'email'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      disabled: this.state.loading,\n      id: \"password\",\n      label: \"Password\",\n      type: \"password\",\n      value: this.state.password,\n      onChange: e => this.handleChange(e.currentTarget.value, 'password'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        color: 'red'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, this.state.error), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(Button, {\n      disabled: this.state.loading,\n      variant: \"contained\",\n      color: \"primary\",\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}","map":{"version":3,"sources":["/home/jcho/Go/src/github.com/jchou8/sling/src/components/Login.tsx"],"names":["React","Component","Container","TextField","Button","initialState","login","username","password","email","error","loading","Login","state","handleChange","value","field","setState","prevState","handleSubmit","event","preventDefault","validateInfo","tryLogin","tryRegister","length","toggleLogin","render","e","currentTarget","color"],"mappings":"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","sourcesContent":["import React, { Component, ChangeEvent, FormEvent } from 'react';\n\nimport {\n    Container,\n    TextField,\n    Button,\n    makeStyles\n} from '@material-ui/core'\n\nconst initialState = {\n    login: true,\n    username: '',\n    password: '',\n    email: '',\n    error: '',\n    loading: false\n}\ntype LoginState = {\n    login: boolean,\n    username: string,\n    password: string,\n    email: string,\n    error: string,\n    loading: boolean\n}\n\nexport default class Login extends Component<{}, LoginState> {\n    readonly state: LoginState = initialState\n\n    handleChange(value: string, field: string) {\n        this.setState(prevState => ({\n            ...prevState,\n            [field]: value\n        }))\n    }\n\n    handleSubmit(event: FormEvent<HTMLFormElement>) {\n        event.preventDefault()\n        if (!this.validateInfo()) {\n            return\n        }\n\n        this.setState({ error: '', loading: true })\n        if (this.state.login) {\n            this.tryLogin()\n        } else {\n            this.tryRegister()\n        }\n    }\n\n    validateInfo(): boolean {\n        if (this.state.username.length <= 0) {\n            this.setState({ error: 'No username provided.' })\n            return false\n        }\n\n        if (!this.state.login && this.state.email.length <= 0) {\n            this.setState({ error: 'No email provided.' })\n            return false\n        }\n\n        if (this.state.password.length <= 0) {\n            this.setState({ error: 'No password provided.' })\n            return false\n        }\n\n        return true\n    }\n\n    toggleLogin() {\n        this.setState({ login: !this.state.login })\n    }\n\n    tryLogin() {\n        this.setState({ loading: false })\n    }\n\n    tryRegister() {\n        this.setState({ loading: false })\n    }\n\n    render() {\n        return (\n            <Container maxWidth=\"sm\">\n                <h1>{this.state.login ? 'Login' : 'Register'}</h1>\n\n                <div>\n                    <Button\n                        disabled={this.state.loading}\n                        variant='contained'\n                        onClick={() => this.toggleLogin()}\n                    >\n                        {this.state.login ? 'Register' : 'Login'}\n                    </Button>\n                </div>\n\n                <br />\n\n                <form onSubmit={(e) => this.handleSubmit(e)}>\n                    <div>\n                        <TextField\n                            disabled={this.state.loading}\n                            id='username'\n                            label='Username'\n                            value={this.state.username}\n                            onChange={e => this.handleChange(e.currentTarget.value, 'username')}\n                        />\n                    </div>\n\n                    {!this.state.login &&\n                        <div>\n                            <TextField\n                                disabled={this.state.loading}\n                                id='email'\n                                label='Email'\n                                value={this.state.email}\n                                onChange={e => this.handleChange(e.currentTarget.value, 'email')}\n                            />\n                        </div>\n                    }\n\n                    <div>\n                        <TextField\n                            disabled={this.state.loading}\n                            id='password'\n                            label='Password'\n                            type='password'\n                            value={this.state.password}\n                            onChange={e => this.handleChange(e.currentTarget.value, 'password')}\n                        />\n                    </div>\n\n                    <br />\n\n                    <div style={{ color: 'red' }}>{this.state.error}</div>\n\n                    <br />\n\n                    <Button\n                        disabled={this.state.loading}\n                        variant='contained'\n                        color='primary'\n                        type='submit'\n                        value='Submit'\n                    >\n                        Submit\n                    </Button>\n                </form>\n            </Container>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}